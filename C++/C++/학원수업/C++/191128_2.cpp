#include <iostream>

using namespace std;

// ##1. 소멸자 (Destructor)
// 객체 소멸 시 자동 호출된다.
// 프로그래머가 소멸자를 정의하지 않으면 컴파일러가 기본 소멸자를 만들어둔다.
// 프로그래머가 소멸자를 정의한다면 컴파일러는 기본 소멸자를 만들어주지 않는다.
// 소멸자는 생성자와 달리 오버로딩 할 수 없다.

class CTest
{
public:
	~CTest()	// 기본 소멸자 (디폴트 소멸자)
	{
		cout << "기본 소멸자" << endl;
	}
};

void main()
{
	// 과제: 성적표 프로그램 클래스로 작성하기.
	// 1.입력 2.출력 3.검색 출력 4.검색 삭제
	// 입력 시에 몇 명의 성적표를 입력할 것인가 개수 입력까지.
	// 평균 점수로 내림차순 정렬 후 출력.

	// 추가기능: 추가입력 가능. (동적 배열로 성적표 관리하기)
	// 몇 명의 성적표를 추가할 것인가 개수 입력.
	// 검색 삭제 시 실제 배열의 길이도 줄어들어야한다.









	//// ##3. 동적할당 시 소멸자 호출
	//CTest* ptr = new CTest;

	//// delete 시점에서 소멸자 호출.
	////delete ptr;

	//// free함수는 소멸자 호출 X
	//free(ptr);

	//// ##2. 객체 소멸 과정
	//// 소멸자 호출 -> 메모리 반환.
	//CTest obj;

	//cout << "main함수 끝" << endl;
}