#include <iostream>
#include <ctime>

using namespace std;

void main()
{
	// 과제.1 가위바위보 게임
	// 컴퓨터와 가위바위보를 진행.
	// 3라운드 동안 진행하며 승, 무, 패 누적.
	// 게임 종료될 때 승, 무, 패 출력.

	// 과제.2 홀짝 게임
	// 컴퓨터가 뽑은 난수가 홀인이 짝인지 맞추는 게임
	// 컴퓨터는 1 ~ 10 사이의 난수를 뽑는다.
	// 3라운드 동안 진행하며 승, 패 누적.
	// 게임 종료될 때 승, 패 출력.

	// 과제.3 로또 프로그램
	// 1 ~ 45까지의 숫자 중에 중복없이 6개 뽑아내기.
	// 총 6회 진행. 각 회차마다 6개의 수는 오름차순 정렬하여 출력한다.

	// 과제.4 숫자 야구 게임.
	// 컴퓨터는 1 ~ 9 사이의 숫자를 랜덤하게 3개 뽑는다. 
	//  - 이 때 3개의 숫자는 중복되지 않는다.
	// 사용자가 1 ~ 9 사이의 3개 숫자를 입력한다.
	//  - 이 때 3개의 숫자는 중복되지 않는다.
	// 예를 들어 컴퓨터 뽑은 숫자들이 1 2 3이고 사용자가 입력한 숫자들이 1 3 2일 때
	// 1스트라이크 2볼이 된다. 이 게임은 3스트라이크가 될 때까지 진행된다.








	// ##2. 배열 (Array)
	// 자료구조의 일종.

	// 배열 선언과 초기화.

	// int타입의 데이터를 5개 담아낸다. 
	// 이 때 선언된 배열의 길이는 두번 다시 바꿀 수 없다 -> "정적배열"이라 한다.
	//int iArr1[5];  // 모든 원소는 현재 쓰레기 값이다.
	//int iArr2[5] = {}; // 모든 원소는 0으로 초기화된다.
	//int iArr3[5] = { 10, }; // 첫번째 원소는 10으로 초기화하고 나머지는 0으로 초기화된다.

	//////////////////////////////////////////

	// int iCoke = 100, iCider = 200, iFanta = 300;
	//int iDrink[3] = { 100, 200, 300 };

	//// 배열의 인덱스는 0부터 ~ 개수-1까지 존재한다.
	//cout << "콜라: " << iDrink[0] << endl;
	//cout << "사이다: " << iDrink[1] << endl;
	//cout << "환타: " << iDrink[2] << endl;

	//iDrink[2] = 500; // 현재 원소에 다른 값을 주고있다.

	//// 문제.1 다음의 배열을 오름차순으로 정렬하여라.
	//int iArr[5] = { 5, 2, 4, 3, 1 };

	//for (int i = 0; i < 5; ++i)
	//	cout << iArr[i] << endl;











	// ##1. 난수 (Random)

	// rand함수 <stdlib.h> 필요.
	// 이미 작성되어 있는 난수 테이블에서 순서대로 난수를 얻어옴.

	//int a = rand(); // 난수를 반환.
	//int b = rand();
	//int c = rand();

	///////////////////////////////////////////////////////////////////

	//srand(5); // 씨드 값 설정하는 함수.

	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;
	//cout << rand() << endl;

	///////////////////////////////////////////////////////////////////

	// time() // time함수 <ctime> 헤더 필요.
	// 대략 1970년부터 지금까지 흘러온 시간을 초단위로 세어서 반환.
	//cout << time(nullptr) << endl;

	//// 현재 흘러가는 시간 값을 씨드로 활용하다.
	//srand((unsigned)time(nullptr)); 

	//cout << rand() % 100 << endl;
	//cout << rand() % 100 << endl;
	//cout << rand() % 100 << endl;
	//cout << rand() % 100 << endl;
	//cout << rand() % 100 << endl;
	//cout << rand() % 100 << endl;

	// 문제.1 
	// 아이템을 3분의 1 확률로 10번 강화 시켜보자.
	/*int iItemLevel = 0;

	srand((unsigned)time(nullptr));

	for (int i = 0; i < 10; ++i)
	{
		if (!(rand() % 3))
			++iItemLevel;
	}

	cout << "집행검 +" << iItemLevel << endl;*/

}